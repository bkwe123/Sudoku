# -*- coding: utf-8 -*-
"""Sudoku.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_JZ5vDBMNGq8S3G-vL-qJONfxeC5T56z
"""

def check(board, x, y, num):
  for i in range(9):
    if board[x][i] == num or board[i][y] == num:
      return False
  xshift = x//3 * 3
  yshift = y//3 * 3
  for i in range(3):
    for j in range(3):
      if board[xshift + i][yshift + j] == num:
        return False 
  return True
  
def solve(board):
  for x in range(9):
    for y in range(9):
      if board[x][y] == 0:
        for num in range(1, 10):
          if check(board, x, y, num):
            board[x][y] = num
            solve(board)
            board[x][y] = 0
        return
  disp(board)

def disp(mat):
  print("Possible Solution:")
  for item in mat:
    print(item)
  print()

board = [[0, 0, 0, 0, 0, 0, 0, 0, 1],
         [6, 8, 0, 0, 7, 0, 0, 9, 0],
         [1, 9, 0, 0, 0, 4, 5, 0, 0],
         [0, 2, 0, 1, 0, 0, 0, 4, 0],
         [0, 0, 4, 6, 0, 2, 9, 0, 0],
         [0, 5, 0, 0, 0, 3, 0, 2, 8],
         [0, 0, 9, 3, 0, 0, 0, 7, 4],
         [0, 4, 0, 0, 5, 0, 0, 3, 6],
         [7, 0, 0, 0, 1, 8, 0, 0, 0]]

solve(board)